1. There is only one function definition that typechecks and doesnâ€™t
go into an infinite loop when you run it.
i :: a -> a
i x = x

2. There is only one version that works.
c :: a -> b -> a
c x y = x

3. Given alpha equivalence are c'' and c (see above) the same
thing?
c'' :: b -> a -> b
c'' x y = x

4. Only one version that works.
c' :: a -> b -> b
c' x y = y

5. There are multiple possibilities, at least two of which youâ€™ve
seen in previous chapters.
r :: [a] -> [a]
r x = x
r x = reverse x
r x = tail x

6. Only one version that will typecheck.
co :: (b -> c) -> (a -> b) -> a -> c
co bc ab a = bc $ ab a

7. Only one version that will typecheck.
a :: (a -> c) -> a -> a
a ac a = a

8. One version will typecheck.
a' :: (a -> b) -> a -> b
a' ab a = ab a 
